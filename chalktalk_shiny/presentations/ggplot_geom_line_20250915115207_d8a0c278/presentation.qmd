---
title: "chalktalk Demo"
format: 
    revealjs:
        theme: moon
---

## ggplot geom line

::: {.fragment tts="Welcome to this lesson on geom line in ggplot2. We'll explore how to create line plots and learn about the recent updates to this important geometry."}
:::

## What is geom line

::: {.fragment tts="geom line is a layer function in ggplot2 that connects observations in order of the variable on the x-axis."}
- Connects data points with lines
:::

::: {.fragment tts="It's commonly used for time series data, trends, and continuous relationships."}
- Perfect for time series and trends
:::

::: {.fragment tts="The basic syntax requires x and y aesthetics to define the line path."}
- Requires x and y aesthetics
:::

## Basic geom line Example

::: {.fragment tts="Let's start with a simple example using the built-in economics dataset. This creates a basic line plot showing unemployment over time."}

```{r}
#| echo: true
library(ggplot2)

ggplot(economics, aes(x = date, y = unemploy)) +
  geom_line()
```
:::

## Important Update linewidth vs size

::: {.fragment tts="There's been an important update in ggplot2. The size parameter for controlling line thickness has been deprecated."}
- The `size` parameter is deprecated
:::

::: {.fragment tts="Instead, we now use the linewidth parameter to control the thickness of lines."}
- Use `linewidth` instead of `size`
:::

::: {.fragment tts="This change improves consistency and clarity in the ggplot2 API."}
- Better consistency in ggplot2 API
:::

## Using linewidth Parameter

::: {.fragment tts="Here's how to use the new linewidth parameter. Setting linewidth to 1.5 makes the line thicker than the default."}

```{r}
#| echo: true
ggplot(economics, aes(x = date, y = unemploy)) +
  geom_line(linewidth = 1.5)
```
:::

## Multiple Lines with Different Widths

::: {.fragment tts="You can create multiple lines with different line widths. Here we plot two economic indicators with different line thicknesses for visual distinction."}

```{r}
#| echo: true
ggplot(economics, aes(x = date)) +
  geom_line(aes(y = unemploy), linewidth = 1.2, color = "blue") +
  geom_line(aes(y = psavert), linewidth = 0.8, color = "red")
```
:::

## Mapping linewidth to Data

::: {.fragment tts="You can also map linewidth to a variable in your data. Let's create sample data to demonstrate this aesthetic mapping."}

```{r}
#| echo: true
sample_data <- data.frame(
  x = 1:10,
  y = cumsum(rnorm(10)),
  importance = c(1, 1, 2, 2, 3, 3, 2, 2, 1, 1)
)

ggplot(sample_data, aes(x = x, y = y, linewidth = importance)) +
  geom_line()
```
:::

## Combining with Other Aesthetics

::: {.fragment tts="You can combine linewidth with other aesthetics like color and linetype for rich visualizations. This example uses the mtcars dataset grouped by cylinder count."}

```{r}
#| echo: true
library(dplyr)

mtcars %>%
  group_by(cyl, gear) %>%
  summarise(avg_mpg = mean(mpg), .groups = "drop") %>%
  ggplot(aes(x = gear, y = avg_mpg, color = factor(cyl))) +
  geom_line(linewidth = 1.2, linetype = "dashed")
```
:::

## Best Practices for linewidth

::: {.fragment tts="Here are some best practices when using linewidth. Keep values reasonable, typically between 0.5 and 3."}
- Keep values reasonable (0.5 to 3)
:::

::: {.fragment tts="Use consistent line widths within the same plot for better readability."}
- Maintain consistency within plots
:::

::: {.fragment tts="Consider your audience and the medium where the plot will be displayed."}
- Consider your output medium
:::

## Common linewidth Values

::: {.fragment tts="Here's a reference showing different linewidth values. This helps you choose the right thickness for your visualizations."}

```{r}
#| echo: true
line_demo <- data.frame(
  x = rep(1:5, 4),
  y = rep(1:4, each = 5),
  width = rep(c(0.5, 1, 1.5, 2), each = 5)
)

ggplot(line_demo, aes(x = x, y = y, linewidth = width)) +
  geom_line() +
  facet_wrap(~paste("linewidth =", width), ncol = 2)
```
:::

## Summary

::: {.fragment tts="Let's recap what we've learned about geom line and the linewidth parameter."}
- `geom_line()` connects data points
:::

::: {.fragment tts="Always use linewidth instead of the deprecated size parameter for line thickness."}
- Use `linewidth` not `size`
:::

::: {.fragment tts="You can map linewidth to data or set it as a fixed value for better visual communication."}
- Can be mapped to data or fixed
:::

::: {.fragment tts="That concludes our lesson on geom line. Happy plotting!"}
:::